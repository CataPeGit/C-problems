
class Complex {
public:
    Complex() {
        real = 0;
        imaginary = 0;
    }

    Complex(int a) {
        real = a;
        imaginary = 0;
    }
    
    Complex(int a, int b) {
        real = a;
        imaginary = b;
    }

    Complex(const Complex& other) {
        real = other.real;
        imaginary = other.imaginary;
    }

    int getReal() {
        return real;
    }

    int getImaginary() {
        return imaginary;
    }

    bool operator==(const Complex& other) {
        if (real != other.real || imaginary != other.imaginary)
            return false;
        return true;
    }

    Complex& operator/(int divisor) {
        if (divisor == 0)
            throw("Division by zero!");
        this->real = this->real / divisor;
        imaginary = 0;
    }

    void operator=(Complex& other) {
        real = other.real;
        imaginary = other.imaginary;
    }

private:
    int real;
    int imaginary;
};
